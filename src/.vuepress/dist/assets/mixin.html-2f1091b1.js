const n=JSON.parse('{"key":"v-b1540b7c","path":"/vues/v2/mixin.html","title":"Mixin(混入) & Transition(过渡)","lang":"zh-CN","frontmatter":{"title":"Mixin(混入) & Transition(过渡)","index":true,"icon":"vue","category":["vue"],"description":"mixin(混入) 是什么 混入 (mixin) 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能。一个混入对象可以包含任意组件选项。当组件使用混入对象时，所有混入对象的选项将被“混合”进入该组件本身的选项。(可以理解为，把vue组件中的script内容提出来了一份js文件，拥有vue的生命周期、数据状态) 基础示例 // 定义一个myMixin混入对象 let myMixin = { created: function () { this.hello(); }, methods: { hello: function () { console.log(\\"hello,I am myMixin\\"); }, }, }; // 定义一个使用混入对象的组件 let Component = Vue.extend({ mixin: [myMixin], }); let component = new Component() // 会在加载结束后，created声明周期输出内容hello,I am myMixin","head":[["meta",{"property":"og:url","content":"http://www.mashimaro.top/vues/v2/mixin.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"Mixin(混入) & Transition(过渡)"}],["meta",{"property":"og:description","content":"mixin(混入) 是什么 混入 (mixin) 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能。一个混入对象可以包含任意组件选项。当组件使用混入对象时，所有混入对象的选项将被“混合”进入该组件本身的选项。(可以理解为，把vue组件中的script内容提出来了一份js文件，拥有vue的生命周期、数据状态) 基础示例 // 定义一个myMixin混入对象 let myMixin = { created: function () { this.hello(); }, methods: { hello: function () { console.log(\\"hello,I am myMixin\\"); }, }, }; // 定义一个使用混入对象的组件 let Component = Vue.extend({ mixin: [myMixin], }); let component = new Component() // 会在加载结束后，created声明周期输出内容hello,I am myMixin"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-16T01:50:21.000Z"}],["meta",{"property":"article:author","content":"LJK"}],["meta",{"property":"article:modified_time","content":"2023-08-16T01:50:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mixin(混入) & Transition(过渡)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-16T01:50:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LJK\\",\\"url\\":\\"http://www.mashimaro.top/\\"}]}"]]},"headers":[{"level":2,"title":"基础示例","slug":"基础示例","link":"#基础示例","children":[]},{"level":2,"title":"全局混入mixin","slug":"全局混入mixin","link":"#全局混入mixin","children":[]},{"level":2,"title":"mixin缺点","slug":"mixin缺点","link":"#mixin缺点","children":[]},{"level":2,"title":"Transition过渡","slug":"transition过渡","link":"#transition过渡","children":[]}],"git":{"createdTime":1692150621000,"updatedTime":1692150621000,"contributors":[{"name":"LHHdiv","email":"1067546112@qq.com","commits":1}]},"readingTime":{"minutes":2.17,"words":651},"filePathRelative":"vues/v2/mixin.md","localizedDate":"2023年8月16日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">mixin(混入) 是什么</p>\\n<p>混入 (mixin) 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能。一个混入对象可以包含任意组件选项。当组件使用混入对象时，所有混入对象的选项将被“混合”进入该组件本身的选项。(可以理解为，把vue组件中的script内容提出来了一份js文件，拥有vue的生命周期、数据状态)</p>\\n</div>\\n<h2> 基础示例</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 定义一个myMixin混入对象</span>\\n<span class=\\"token keyword\\">let</span> myMixin <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function-variable function\\">created</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">hello</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">methods</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function-variable function\\">hello</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"hello,I am myMixin\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 定义一个使用混入对象的组件</span>\\n<span class=\\"token keyword\\">let</span> Component <span class=\\"token operator\\">=</span> Vue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">extend</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">mixin</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>myMixin<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">let</span> component <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Component</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 会在加载结束后，created声明周期输出内容hello,I am myMixin</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
