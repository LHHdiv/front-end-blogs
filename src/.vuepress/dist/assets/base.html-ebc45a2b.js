const t=JSON.parse('{"key":"v-5f4a258b","path":"/js/typescript/base.html","title":"TS类型","lang":"zh-CN","frontmatter":{"title":"TS类型","index":true,"icon":"laptop-code","category":["Typescript"],"description":"TS 类型注解 内容 TS 是 JS 的超集，提供了 JS 所有的功能，并且额外增加了类型系统 TS 类型系统可以显示标记出代码中的意外行为，让开发者在开发过程中就可以看到错误并改正，从而降低运行时发生错误的可能性 // 这里的:string就是类型注解，约定了变量name的类型只能是字符串格式 let name: string = \\"小L\\"; ts 基础语法 let 变量名:类型注解 = 变量值 示例：;","head":[["meta",{"property":"og:url","content":"http://www.mashimaro.top/js/typescript/base.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"TS类型"}],["meta",{"property":"og:description","content":"TS 类型注解 内容 TS 是 JS 的超集，提供了 JS 所有的功能，并且额外增加了类型系统 TS 类型系统可以显示标记出代码中的意外行为，让开发者在开发过程中就可以看到错误并改正，从而降低运行时发生错误的可能性 // 这里的:string就是类型注解，约定了变量name的类型只能是字符串格式 let name: string = \\"小L\\"; ts 基础语法 let 变量名:类型注解 = 变量值 示例：;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-18T09:55:08.000Z"}],["meta",{"property":"article:author","content":"LJK"}],["meta",{"property":"article:modified_time","content":"2023-08-18T09:55:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TS类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-18T09:55:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LJK\\",\\"url\\":\\"http://www.mashimaro.top/\\"}]}"]]},"headers":[{"level":2,"title":"TS 类型注解","slug":"ts-类型注解","link":"#ts-类型注解","children":[]},{"level":2,"title":"TS 类型分类","slug":"ts-类型分类","link":"#ts-类型分类","children":[]},{"level":2,"title":"TS 类型别名","slug":"ts-类型别名","link":"#ts-类型别名","children":[]},{"level":2,"title":"TS 数组类型","slug":"ts-数组类型","link":"#ts-数组类型","children":[]},{"level":2,"title":"TS 联合类型","slug":"ts-联合类型","link":"#ts-联合类型","children":[]},{"level":2,"title":"TS 函数类型","slug":"ts-函数类型","link":"#ts-函数类型","children":[]},{"level":2,"title":"TS void 类型","slug":"ts-void-类型","link":"#ts-void-类型","children":[]},{"level":2,"title":"TS 对象类型","slug":"ts-对象类型","link":"#ts-对象类型","children":[]},{"level":2,"title":"TS 可选参数","slug":"ts-可选参数","link":"#ts-可选参数","children":[]},{"level":2,"title":"TS 字面量类型","slug":"ts-字面量类型","link":"#ts-字面量类型","children":[]},{"level":2,"title":"TS 接口类型","slug":"ts-接口类型","link":"#ts-接口类型","children":[]},{"level":2,"title":"TS 枚举类型","slug":"ts-枚举类型","link":"#ts-枚举类型","children":[]},{"level":2,"title":"TS any 类型","slug":"ts-any-类型","link":"#ts-any-类型","children":[]},{"level":2,"title":"TS 元组类型","slug":"ts-元组类型","link":"#ts-元组类型","children":[]},{"level":2,"title":"TS 类型推论","slug":"ts-类型推论","link":"#ts-类型推论","children":[]},{"level":2,"title":"TS 类型断言","slug":"ts-类型断言","link":"#ts-类型断言","children":[]},{"level":2,"title":"interface VS type","slug":"interface-vs-type","link":"#interface-vs-type","children":[]}],"git":{"createdTime":1692150621000,"updatedTime":1692352508000,"contributors":[{"name":"LHHdiv","email":"1067546112@qq.com","commits":3}]},"readingTime":{"minutes":14.18,"words":4253},"filePathRelative":"js/typescript/base.md","localizedDate":"2023年8月16日","excerpt":"<h2> TS 类型注解</h2>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">内容</p>\\n<ul>\\n<li>TS 是 JS 的超集，提供了 JS 所有的功能，并且额外增加了<strong>类型系统</strong></li>\\n<li>TS 类型系统可以显示标记出代码中的意外行为，让开发者在开发过程中就可以看到错误并改正，从而降低运行时发生错误的可能性</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 这里的:string就是类型注解，约定了变量name的类型只能是字符串格式</span>\\n<span class=\\"token keyword\\">let</span> <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> string <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"小L\\"</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><h4> ts 基础语法</h4>\\n<p>let 变量名:类型注解 = 变量值<br>\\n示例：;</p>\\n</div>","autoDesc":true}');export{t as data};
