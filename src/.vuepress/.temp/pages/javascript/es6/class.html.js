export const data = JSON.parse("{\"key\":\"v-3fab1591\",\"path\":\"/javascript/es6/class.html\",\"title\":\"class类\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"class类\",\"index\":true,\"icon\":\"laptop-code\",\"category\":[\"Javascript\"],\"description\":\"传统的构造函数 例子(面向对象中：将下面对一个对象的所有成员的定义，统称为类) // 构造函数(构造器) function Animal(type, name, age, sex){ this.type = type; this.name = name; this.age = age; this.sex = sex; } // 定义示例方法(原型方法) Animal.prototype.print = function(){ console.log(`【种类】: ${this.type}`) console.log(`【名字】: ${this.name}`) console.log(`【年龄】: ${this.age}`) console.log(`【性别】: ${this.sex}`) } const a = new Animal('狗', '小花', 3，'公') a.print(); // 遍历(会遍历到原型上的属性) for(let prop in a){ console.log(prop); // 打印出type，name, age, sex, print }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://www.mashimaro.top/javascript/es6/class.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"class类\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"传统的构造函数 例子(面向对象中：将下面对一个对象的所有成员的定义，统称为类) // 构造函数(构造器) function Animal(type, name, age, sex){ this.type = type; this.name = name; this.age = age; this.sex = sex; } // 定义示例方法(原型方法) Animal.prototype.print = function(){ console.log(`【种类】: ${this.type}`) console.log(`【名字】: ${this.name}`) console.log(`【年龄】: ${this.age}`) console.log(`【性别】: ${this.sex}`) } const a = new Animal('狗', '小花', 3，'公') a.print(); // 遍历(会遍历到原型上的属性) for(let prop in a){ console.log(prop); // 打印出type，name, age, sex, print }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"LJK\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"class类\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"LJK\\\",\\\"url\\\":\\\"http://www.mashimaro.top/\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"传统的构造函数\",\"slug\":\"传统的构造函数\",\"link\":\"#传统的构造函数\",\"children\":[]},{\"level\":2,\"title\":\"ES6 类的写法\",\"slug\":\"es6-类的写法\",\"link\":\"#es6-类的写法\",\"children\":[]},{\"level\":2,\"title\":\"类的特点\",\"slug\":\"类的特点\",\"link\":\"#类的特点\",\"children\":[]},{\"level\":2,\"title\":\"类的其他书写方式\",\"slug\":\"类的其他书写方式\",\"link\":\"#类的其他书写方式\",\"children\":[]},{\"level\":2,\"title\":\"类的继承\",\"slug\":\"类的继承\",\"link\":\"#类的继承\",\"children\":[]}],\"readingTime\":{\"minutes\":4.84,\"words\":1451},\"filePathRelative\":\"javascript/es6/class.md\",\"excerpt\":\"\\n<!-- 设置了YAML语法之后，就不用## 定义title了，会重复显示 -->\\n<!-- ## Class 类 -->\\n<h2> 传统的构造函数</h2>\\n<ol>\\n<li>例子(面向对象中：将下面对一个对象的所有成员的定义，统称为类)</li>\\n</ol>\\n<div class=\\\"language-javascript line-numbers-mode\\\" data-ext=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// 构造函数(构造器)</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Animal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">type<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> age<span class=\\\"token punctuation\\\">,</span> sex</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>type <span class=\\\"token operator\\\">=</span> type<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>name <span class=\\\"token operator\\\">=</span> name<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>age <span class=\\\"token operator\\\">=</span> age<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>sex <span class=\\\"token operator\\\">=</span> sex<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token comment\\\">// 定义示例方法(原型方法)</span>\\n<span class=\\\"token class-name\\\">Animal</span><span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">print</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">【种类】: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">【名字】: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">【年龄】: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>age<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">【性别】: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>sex<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Animal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'狗'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'小花'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span>，<span class=\\\"token string\\\">'公'</span><span class=\\\"token punctuation\\\">)</span>\\na<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 遍历(会遍历到原型上的属性)</span>\\n<span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> prop <span class=\\\"token keyword\\\">in</span> a<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>prop<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// 打印出type，name, age, sex, print</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
